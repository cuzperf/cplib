name: TEST

# on:
#   push:
#     branches-ignore:
#       - gh-pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cplib and CMake
      run: |
        git submodule update --init --recursive
        sudo apt update
        sudo apt install -y cmake lcov doxygen graphviz
        rm -rf build
        cmake -B build -DDOXYGEN=ON
        cmake --build build
        build/unit_test
      shell: bash

    - name: Build x86 project with CMake and Test
      run: |
        rm -rf build
        cmake -B build -DBUILD_32BIT=ON
        cmake --build build
        build/unit_test
      shell: bash

    - name: Build project with CMake and Test and coverage
      run: |
        rm -rf build
        cmake -B build -DCOVERAGE=ON
        cmake --build build
        build/unit_test
        cmake --build build --target coverage
      shell: bash
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cplib and CMake
      run: |
        git submodule update --init --recursive
        brew update
        brew install cmake
      shell: bash

    - name: Build project with CMake and Test
      run: |
        rm -rf build
        cmake -B build
        cmake --build build
        build/unit_test
      shell: bash


  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Cplib and CMake
      run: |
        git submodule update --init --recursive
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      shell: powershell

    - name: Build x86 project with CMake and Test
      run: |
        rmdir /s /q build
        cmake -B build -DBUILD_32BIT=ON
        cmake --build build --config Release
        build\Release\unit_test.exe
      shell: cmd

    - name: Build project with CMake and Test
      run: |
        rmdir /s /q build
        cmake -B build
        cmake --build build --config Release
        build\Release\unit_test.exe
      shell: cmd
